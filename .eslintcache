[{"D:\\MERN\\Google Keep Clone\\src\\index.tsx":"1","D:\\MERN\\Google Keep Clone\\src\\App.tsx":"2","D:\\MERN\\Google Keep Clone\\src\\context\\NotesContext.tsx":"3","D:\\MERN\\Google Keep Clone\\src\\context\\NotesReducers\\reducers.tsx":"4","D:\\MERN\\Google Keep Clone\\src\\container\\InputForm.tsx":"5","D:\\MERN\\Google Keep Clone\\src\\context\\NotesReducers\\archive-reducer.tsx":"6","D:\\MERN\\Google Keep Clone\\src\\context\\NotesReducers\\action.types.tsx":"7","D:\\MERN\\Google Keep Clone\\src\\context\\NotesReducers\\trash-reducer.tsx":"8","D:\\MERN\\Google Keep Clone\\src\\component\\Notes\\Notes.tsx":"9","D:\\MERN\\Google Keep Clone\\src\\component\\UI\\NavBar\\NavBar.tsx":"10","D:\\MERN\\Google Keep Clone\\src\\component\\UI\\Sidedrawer\\Sidedrawer.tsx":"11","D:\\MERN\\Google Keep Clone\\src\\component\\Deleted_Notes\\Bin.tsx":"12","D:\\MERN\\Google Keep Clone\\src\\component\\Archive_Notes\\Archive.tsx":"13","D:\\MERN\\Google Keep Clone\\src\\component\\UI\\Icons\\Icons.tsx":"14","D:\\MERN\\Google Keep Clone\\src\\component\\UI\\Logo\\Logo.tsx":"15","D:\\MERN\\Google Keep Clone\\src\\component\\Full_Note\\FullNote.tsx":"16","D:\\MERN\\Google Keep Clone\\src\\component\\UI\\Backdrop\\Backdrop.tsx":"17","D:\\MERN\\Google Keep Clone\\src\\component\\UI\\Editor\\Editor.tsx":"18"},{"size":277,"mtime":1626946269643,"results":"19","hashOfConfig":"20"},{"size":2781,"mtime":1627005672415,"results":"21","hashOfConfig":"20"},{"size":679,"mtime":1627025448532,"results":"22","hashOfConfig":"20"},{"size":1204,"mtime":1627028632320,"results":"23","hashOfConfig":"20"},{"size":4657,"mtime":1626979452256,"results":"24","hashOfConfig":"20"},{"size":1198,"mtime":1626975210614,"results":"25","hashOfConfig":"20"},{"size":815,"mtime":1626976290823,"results":"26","hashOfConfig":"20"},{"size":782,"mtime":1626978970838,"results":"27","hashOfConfig":"20"},{"size":3928,"mtime":1627038726030,"results":"28","hashOfConfig":"20"},{"size":649,"mtime":1627005832284,"results":"29","hashOfConfig":"20"},{"size":830,"mtime":1627008165559,"results":"30","hashOfConfig":"20"},{"size":2233,"mtime":1627038546847,"results":"31","hashOfConfig":"20"},{"size":3198,"mtime":1627038449975,"results":"32","hashOfConfig":"20"},{"size":1523,"mtime":1627005786286,"results":"33","hashOfConfig":"20"},{"size":254,"mtime":1626965149912,"results":"34","hashOfConfig":"20"},{"size":4543,"mtime":1627037871236,"results":"35","hashOfConfig":"20"},{"size":179,"mtime":1626965070641,"results":"36","hashOfConfig":"20"},{"size":404,"mtime":1627035099749,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"8dq23z",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\MERN\\Google Keep Clone\\src\\index.tsx",[],["76","77"],"D:\\MERN\\Google Keep Clone\\src\\App.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\context\\NotesContext.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\context\\NotesReducers\\reducers.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\container\\InputForm.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\context\\NotesReducers\\archive-reducer.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\context\\NotesReducers\\action.types.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\context\\NotesReducers\\trash-reducer.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\component\\Notes\\Notes.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\component\\UI\\NavBar\\NavBar.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\component\\UI\\Sidedrawer\\Sidedrawer.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\component\\Deleted_Notes\\Bin.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\component\\Archive_Notes\\Archive.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\component\\UI\\Icons\\Icons.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\component\\UI\\Logo\\Logo.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\component\\Full_Note\\FullNote.tsx",["78"],"import React, {Fragment, useContext, useEffect, useState } from 'react'\r\nimport Backdrop from '../UI/Backdrop/Backdrop'\r\nimport Icons from '../UI/Icons/Icons';\r\nimport {v4} from 'uuid'\r\nimport './FullNote.css'\r\n// context-api stuff\r\nimport NotesContext,{NoteType} from '../../context/NotesContext'\r\nimport { ActionType} from '../../context/NotesReducers/action.types'\r\nimport Editor from '../UI/Editor/Editor';\r\n\r\ntype FullNotePropsType={\r\n\tid:string,\r\n\toffLoadFullNote:()=>void,\r\n\tonTaskComplete:(id:string,elemID:string)=>void\r\n\r\n}\r\nconst FullNote:React.FC <FullNotePropsType>= (props) =>{\r\n\r\n const notesContext=useContext(NotesContext);\r\n const [fullNote,setFullNote]=useState<NoteType>({id:'',criterion:'',title:\"\",content:\"\"})\r\n const [formatedNote,setFormatedNote] = useState(\"\")\r\n const [todoTask , setTodoTask] = useState(\"\")\r\n\r\n   useEffect(()=>{\r\n\t if(fullNote.id ==='' || fullNote.id !== props.id)\r\n\t\t{\r\n\t\t\tlet updatingNoteIndex=notesContext.todos.findIndex(note=> note.id.toString() === props.id);\r\n\t\t\tlet updatingNote={...notesContext.todos[updatingNoteIndex]};\r\n\t\t\t\r\n\t\t\tsetFullNote({\r\n\t\t\t\tid:updatingNote.id,\r\n\t\t\t\tcriterion: updatingNote.criterion,\r\n\t\t\t\ttitle:updatingNote.title ,\r\n\t\t\t\tcontent:updatingNote.content\r\n\t\t\t});\r\n\r\n\t\t\tif(typeof updatingNote.content ==='string')\r\n\t\t\t\tsetFormatedNote(updatingNote.content)\r\n\t\t}\r\n   },[])\r\n\r\n   const updateNoteHandler = (id:string) =>{\r\n\t  \r\n\t\t\tlet updated_note={\r\n\t\t\t\tid:id,\r\n\t\t\t\tcriterion:fullNote.criterion,\r\n\t\t\t\ttitle:fullNote.title,\r\n\t\t\t\tcontent:formatedNote\r\n\t\t\t}\r\n\t\t\tconsole.log(updated_note)\r\n\t\t\tnotesContext.dispatch({\r\n\t\t\t\ttype:ActionType.UPDATE_NOTE,\r\n\t\t\t\tpayload:updated_note\r\n\t\t\t})\r\n\r\n\t\t\t// setFullNote({\r\n\t\t\t// \tid:\"\",\r\n\t\t\t// \tcriterion: \"\",\r\n\t\t\t// \ttitle:\"\",\r\n\t\t\t// \tcontent:\"\"\r\n\t\t\t// });\r\n\t\tprops.offLoadFullNote();\r\n   }\r\n\r\n\r\n\r\n  const onAddTaskHandler = async () =>{\r\n\tlet payload={id:v4(),isCompleted:false,task:todoTask}\t \r\n\tawait setFullNote(prevState=>\r\n\t\t{ \r\n\t\t  let tasks:\r\n\t\t   {\r\n\t\t\tid: string;\r\n\t\t\tisCompleted: boolean;\r\n\t\t\ttask: string;\r\n\t  \t   }[]=[]\r\n\t\t  if(typeof prevState.content !=='string'){\r\n\t\t\ttasks=prevState.content.concat(payload)\r\n\t\t  }\r\n\t\t   \t\r\n\t\t   console.log(tasks)\r\n\t\t   return {...prevState,content:tasks}\r\n\t\t}\r\n\t)\t\r\n\tsetTodoTask(\"\")\r\n  }\r\n\r\n  const updateTodoHandler= async()=>{\r\n\tif(typeof fullNote.content!=='string'){\r\n\t\tlet tasks:\r\n\t\t{id: string;\r\n\t\t\tisCompleted: boolean;\r\n\t\t\ttask: string;\r\n\t\t}[] | string;\r\n\t\tif(todoTask )\r\n\t\t\t tasks = [...fullNote.content,{id:v4(),isCompleted:false,task:todoTask}]\r\n\t\r\n\t\telse\r\n\t\t\t tasks= [...fullNote.content]\r\n\r\n\t\tlet payload={\r\n\t\t\t\tid:fullNote.id,\r\n\t\t\t\tcriterion:fullNote.criterion,\r\n\t\t\t\ttitle:fullNote.title,\r\n\t\t\t\tcontent:tasks\r\n\t\t\t}\r\n\t\tnotesContext.dispatch({\r\n\t\t\t\ttype:ActionType.UPDATE_NOTE,\r\n\t\t\t\tpayload:payload\r\n\t\t\t})\r\n\t}\r\n\t\r\n\tprops.offLoadFullNote();\r\n}\r\n\r\n \r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Backdrop/>\r\n\t\t\t<div className=\"full_note\" >\r\n\t\t\t  <input type=\"text\" className=\"noteTitle\" value={fullNote.title} \r\n\t\t\t  \t onChange={(event)=> setFullNote({...fullNote,title:event.target.value})}></input>\r\n\t\t\t<div  className=\"content-section\">\r\n\t\t\t  {\r\n\t\t\t\t  typeof fullNote.content !==\"string\"\r\n\t\t\t\t  ?\t\r\n\t\t\t\t  \t<>\r\n\t\t\t\t  \t\t{fullNote.content.map(elem=>\r\n\t\t\t\t\t\t\t<div className=\"todo_task\" key={elem.id}>  \r\n\t\t\t\t\t\t\t\t<span className=\"task-complete mt-5\" \r\n\t\t\t\t\t\t\t\t\tonClick={()=>props.onTaskComplete(fullNote.id,elem.id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Icons type={elem.isCompleted?\"check\":\"uncheck\"}/>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<span className=\"todo_content\"  \r\n\t\t\t\t\t\t\t\t\tstyle={{textDecoration:(elem.isCompleted)?\"line-through\":\"none\"}}>\r\n\t\t\t\t\t\t\t\t\t{elem.task}\r\n\t\t\t\t\t\t\t\t</span>\t\r\n\r\n\t\t\t\t   \t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<hr style={{borderWidth:\"1px\",margin:\"auto\"}}></hr>\r\n\t\t\t\t\t\t\t<div className=\"todo_task\" style={{marginTop:'1rem'}}>  \r\n\t\t\t\t   \t\t\t\t<span className=\"task-add\" \r\n\t\t\t\t\t\t\t\t   onClick={onAddTaskHandler}>\r\n\t\t\t\t\t\t\t\t   <Icons type=\"add\"/>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" \r\n\t\t\t\t\t\t\t\t\tvalue={todoTask}\r\n\t\t\t\t\t\t\t\t\tonChange={(e)=>setTodoTask(e.target.value)}\r\n\t\t\t\t  \t\t \t\t\tclassName=\"todo_content\" \r\n\t\t\t\t\t\t\t\t \tplaceholder=\"list item\"\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t \t\t/>  \t\t\t \r\n\t\t\t\t   \t\t\t</div>\t\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t  :\r\n\t\t\t\t  \r\n\t\t\t\t  <Editor content={formatedNote} EditContentHandler={(value)=>setFormatedNote(value) }/>\t\r\n\t\t\t  }\r\n\t\t\t  </div>\r\n\t\t\t\t\r\n\t\t\t  <button onClick={()=>\r\n\t\t\t  \t fullNote.criterion===\"TODO\" ?\r\n\t\t\t\t\tupdateTodoHandler() :\r\n\t\t\t\t\tupdateNoteHandler(fullNote.id)\r\n\t\t\t\t} \r\n\t\t\t\tclassName=\"btn-update\">Update\r\n\t\t\t  </button>\t\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\n export default FullNote","D:\\MERN\\Google Keep Clone\\src\\component\\UI\\Backdrop\\Backdrop.tsx",[],"D:\\MERN\\Google Keep Clone\\src\\component\\UI\\Editor\\Editor.tsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":40,"column":6,"nodeType":"85","endLine":40,"endColumn":8,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fullNote.id', 'notesContext.todos', and 'props.id'. Either include them or remove the dependency array.","ArrayExpression",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [fullNote.id, notesContext.todos, props.id]",{"range":"92","text":"93"},[1342,1344],"[fullNote.id, notesContext.todos, props.id]"]